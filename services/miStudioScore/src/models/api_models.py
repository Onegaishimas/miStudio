# src/models/api_models.py
"""
Pydantic models for the miStudioScore API.

This module defines the data structures for API requests and responses,
ensuring type validation and clear API documentation.
"""

from pydantic import BaseModel, Field
from typing import Dict, Any, List

class ScoreRequest(BaseModel):
    """
    Defines the request body for the /score endpoint.
    """
    features_path: str = Field(
        ...,
        description="Path to the input features.json file generated by miStudioFind.",
        example="data/input/features.json"
    )
    config_path: str = Field(
        ...,
        description="Path to the scoring_config.yaml file defining the scoring jobs.",
        example="config/service_config.yaml"
    )
    output_dir: str = Field(
        ...,
        description="Directory where the output scores.json file will be saved.",
        example="data/output"
    )

class ScoreResponse(BaseModel):
    """
    Defines the response body for a successful /score request.
    """
    message: str = Field(
        description="A confirmation message indicating the status of the scoring job.",
        example="Scoring job completed successfully."
    )
    output_path: str = Field(
        description="The path to the resulting scores.json file.",
        example="data/output/scores_20250727100000.json"
    )
    features_scored: int = Field(
        description="The total number of features processed and scored."
    )
    scores_added: List[str] = Field(
        description="A list of the names of the scores that were added to the features."
    )

class ErrorResponse(BaseModel):
    """
    Defines the structure for an error response.
    """
    detail: str = Field(description="A detailed error message.")
